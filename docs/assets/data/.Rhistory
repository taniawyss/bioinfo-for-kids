prenom <- c("Tania", "Marguerite", "Rose", "Celia")
for (i in 1:length(prenom)) {
print( paste0("Bonjour la planète! Moi, c'est ", prenom[i]))
}
```r
```r
mon_gene <- "ATTCGGTATCCTAGTCATCG"
a_chercher <- "TAT"
grep(a_chercher, mon_gene)
a_chercher <- "TCT"
grep(a_chercher, mon_gene)
a_chercher <- "TAT"
grep(a_chercher, mon_gene)
mes_chiffres <- c(1, 3, 5, 6, 7, 16, 23, 25, 28)
sum(mes_chiffres)
# R est une calculatrice:
1 + 1
# R contient des instructions pré-définies:
mes_chiffres <- c(1, 3, 5, 6, 7, 16, 23, 25, 28)
sum(mes_chiffres)
# Nous allons faire la somme de tous les éléments dans mes_chiffres:
sum(mes_chiffres)
# Nous allons remplacer 23 par 24 et refaire la somme:
mes_chiffres <- c(1, 3, 5, 6, 7, 16, 24, 25, 28)
sum(mes_chiffres)
# On peut complétement remplacer les chiffres:
mes_chiffres <- c(57, 46, 1, 23, 56, 27, 5, 17, 18, 19)
sum(mes_chiffres)
# Une autre instruction pour R: imprimer un texte:
texte <- "Bonjour la planète! Moi, c'est Tania"
print(texte)
# Mon premier programme: imprimer une salutation pour chaque participant:
prenom <- c("Tania", "Marguerite", "Rose", "Celia")
for (i in 1:length(prenom)) {
print( paste0("Bonjour la planète! Moi, c'est ", prenom[i]))
}
# Trouver 3 bases d'ADN dans un gène:
mon_gene <- "ATTCGGTATCCTAGTCATCG"
a_chercher <- "TAT"
grep(a_chercher, mon_gene)
rownames(tmp)
library(edgeR)
library(ggplot2)
library(ggrepel)
library(DESeq2)
library(readr)
setwd("/Users/tania/Dropbox/My Mac (pc-10.home)/Documents/aDOF/bioinfo_for_kids")
tmp<-as.matrix(read.table("GSE230491_AllSamples_rawCounts.txt", header=T, row.names = 1))
keep_cases<-c("case25_HOM",  "case21_HOM2",  "case24_HOM1", # "case21_HOM1",
# "case24_HOM2",
"case22_HOM",  "case23_HOM1",
# "case23_HOM2",
"case11_FCGS", "case12_FCGS", "case10_FCGS",
"case15_FCGS",  "case20_FCGS",
"case17_FCGS",
"case14_FCGS", "case18_FCGS",
"case19_FCGS",
"case5_FCGS" , "case8_FCGS",   "case32_PER",
"case30_PER",  "case29_PER" , "case31_PER" , "case28_PER" )
# change names of HOM; PER and FCGS to something more meaningfull!
# Feline chronic gingivostomatitis FCGS
# include oral pain, difficulty prehending food, ptyalism, and lack of grooming behavior
# treatment is limited: life-long medication, surgery that doesn't always work.
#
tmp<-tmp[-c(which(rowSums(tmp)==0)),keep_cases]
colnames(tmp)<-gsub("HOM1", "Sain", colnames(tmp))
colnames(tmp)<-gsub("HOM2", "Sain", colnames(tmp))
colnames(tmp)<-gsub("HOM3", "Sain", colnames(tmp))
colnames(tmp)<-gsub("HOM", "Sain", colnames(tmp))
colnames(tmp)<-gsub("case", "chat", colnames(tmp))
colnames(tmp)<-gsub("FCGS", "Chronique", colnames(tmp))
colnames(tmp)<-gsub("PER", "Legere", colnames(tmp))
case20_FCGS <- tmp[, "chat20_Chronique"]
names(case20_FCGS)<-rownames(tmp)
tmp<-tmp[,-c(which(colnames(tmp)=="chat20_Chronique"))]
condition<-as.data.frame(cbind(sampleID=colnames(tmp),
condition=sapply(strsplit(colnames(tmp), "_"), '[', 2)))
cpm_counts<-edgeR::cpm(tmp, log = TRUE, prior.count = 1)
sd_count<-sort(apply(cpm_counts, 1, sd), decreasing = T)
cpm_var<-cpm_counts[names(sd_count)[1:500],]
case20_FCGS <- case20_FCGS[names(sd_count)[1:500]]
# identical(rownames(cpm_var), names(case20_FCGS))
# [1] TRUE
pca<-prcomp(t(cpm_var), scale. = TRUE, center = TRUE)
plot(pca$x[,1], pca$x[,2])
pca_res <- as.data.frame(pca$x)
pca_res$condition<-factor(condition$condition)
ggplot(pca_res, aes(x=PC1, y=PC2, colour = condition)) +
geom_point() +
geom_text_repel(label=rownames(pca_res))
identical(rownames(cpm_var), names(case20_FCGS))
getwd()
dim(cpm_var)
?write.table
?read.csv
write.csv(cpm_var, "bioinfo-for-kids/docs/assets/data/genes_gingivite_chats.csv",
quote = FALSE, row.names = TRUE)
setwd("/Users/tania/Dropbox/My Mac (pc-10.home)/Documents/aDOF/bioinfo_for_kids/bioinfo-for-kids/docs/assets/data/")
# Les chats ont la gingivite !
# Nous allons importer dans R une table qui contient l'expression des gènes
genes_chat <- read.csv("genes_gingivite_chats.csv", row.names = 1)
View(genes_chat)
head(genes_chat)
# Nous allons explorer la structure de notre table: chaque ligne correspond à un
# gène, et chaque colonne correspond à un échantillon de chat.
# Les chiffres nous donnent la quantité de chaque gène dans chaque gencive.
head(genes_chat)
pca<-prcomp(t(genes_chat), scale. = TRUE, center = TRUE)
pca<-prcomp(t(genes_chat), scale. = TRUE, center = TRUE)$x
View(pca)
pca<-as.data.frame(pca)
pca$condition<-sapply(strsplit(colnames(tmp), "_"), '[', 2)
ggplot(pca_res, aes(x=PC1, y=PC2, colour = condition)) +
geom_point() +
geom_text_repel(label=rownames(pca_res))
ggplot(pca, aes(x=PC1, y=PC2, colour = condition)) +
geom_point() +
geom_text_repel(label=rownames(pca))
pca$condition<-sapply(strsplit(colnames(genes_chat), "_"), '[', 2)
pca <- prcomp(t(genes_chat), scale. = TRUE, center = TRUE)$x
pca <- as.data.frame(pca)
pca$condition<-sapply(strsplit(colnames(genes_chat), "_"), '[', 2)
ggplot(pca, aes(x=PC1, y=PC2, colour = condition)) +
geom_point() +
geom_text_repel(label=rownames(pca))
case20_FCGS <- case20_FCGS[names(sd_count)[1:500]]
getwd()
write.csv(case20_FCGS, "chat20_cappuccino_genes.csv", quote = FALSE, row.names = 1)
write.csv(as.data.frame(case20_FCGS), "chat20_cappuccino_genes.csv", quote = FALSE, row.names = 1)
write.csv(case20_FCGS, "chat20_cappuccino_genes.csv", quote = FALSE, row.names = TRUE)
tmp<-as.matrix(read.table("GSE230491_AllSamples_rawCounts.txt", header=T, row.names = 1))
tmp<-as.matrix(read.table("~/Dropbox/My Mac (pc-10.home)/Documents/aDOF/bioinfo_for_kids/GSE230491_AllSamples_rawCounts.txt", header=T, row.names = 1))
keep_cases<-c("case25_HOM",  "case21_HOM2",  "case24_HOM1", # "case21_HOM1",
# "case24_HOM2",
"case22_HOM",  "case23_HOM1",
# "case23_HOM2",
"case11_FCGS", "case12_FCGS", "case10_FCGS",
"case15_FCGS",  "case20_FCGS",
"case17_FCGS",
"case14_FCGS", "case18_FCGS",
"case19_FCGS",
"case5_FCGS" , "case8_FCGS",   "case32_PER",
"case30_PER",  "case29_PER" , "case31_PER" , "case28_PER" )
# change names of HOM; PER and FCGS to something more meaningfull!
# Feline chronic gingivostomatitis FCGS
# include oral pain, difficulty prehending food, ptyalism, and lack of grooming behavior
# treatment is limited: life-long medication, surgery that doesn't always work.
#
tmp<-tmp[-c(which(rowSums(tmp)==0)),keep_cases]
colnames(tmp)<-gsub("HOM1", "Sain", colnames(tmp))
colnames(tmp)<-gsub("HOM2", "Sain", colnames(tmp))
colnames(tmp)<-gsub("HOM3", "Sain", colnames(tmp))
colnames(tmp)<-gsub("HOM", "Sain", colnames(tmp))
colnames(tmp)<-gsub("case", "chat", colnames(tmp))
colnames(tmp)<-gsub("FCGS", "Chronique", colnames(tmp))
colnames(tmp)<-gsub("PER", "Legere", colnames(tmp))
case20_FCGS <- tmp[, "chat20_Chronique"]
case20_FCGS
names(case20_FCGS)<-rownames(tmp)
case20_FCGS<-edgeR::cpm(case20_FCGS, log = TRUE, prior.count = 1)
case20_FCGS <- case20_FCGS[names(sd_count)[1:500]]
identical(rownames(cpm_var), names(case20_FCGS))
identical(rownames(genes_chat), names(case20_FCGS))
setwd("/Users/tania/Dropbox/My Mac (pc-10.home)/Documents/aDOF/bioinfo_for_kids/bioinfo-for-kids/docs/assets/data/")
tmp<-as.matrix(read.table("~/Dropbox/My Mac (pc-10.home)/Documents/aDOF/bioinfo_for_kids/GSE230491_AllSamples_rawCounts.txt", header=T, row.names = 1))
keep_cases<-c("case25_HOM",  "case21_HOM2",  "case24_HOM1", # "case21_HOM1",
# "case24_HOM2",
"case22_HOM",  "case23_HOM1",
# "case23_HOM2",
"case11_FCGS", "case12_FCGS", "case10_FCGS",
"case15_FCGS",  "case20_FCGS",
"case17_FCGS",
"case14_FCGS", "case18_FCGS",
"case19_FCGS",
"case5_FCGS" , "case8_FCGS",   "case32_PER",
"case30_PER",  "case29_PER" , "case31_PER" , "case28_PER" )
# change names of HOM; PER and FCGS to something more meaningfull!
# Feline chronic gingivostomatitis FCGS
# include oral pain, difficulty prehending food, ptyalism, and lack of grooming behavior
# treatment is limited: life-long medication, surgery that doesn't always work.
#
tmp<-tmp[-c(which(rowSums(tmp)==0)),keep_cases]
colnames(tmp)<-gsub("HOM1", "Sain", colnames(tmp))
colnames(tmp)<-gsub("HOM2", "Sain", colnames(tmp))
colnames(tmp)<-gsub("HOM3", "Sain", colnames(tmp))
colnames(tmp)<-gsub("HOM", "Sain", colnames(tmp))
colnames(tmp)<-gsub("case", "chat", colnames(tmp))
colnames(tmp)<-gsub("FCGS", "Chronique", colnames(tmp))
colnames(tmp)<-gsub("PER", "Legere", colnames(tmp))
cpm_counts<-edgeR::cpm(tmp, log = TRUE, prior.count = 1)
setwd("/Users/tania/Dropbox/My Mac (pc-10.home)/Documents/aDOF/bioinfo_for_kids/bioinfo-for-kids/docs/assets/data/")
tmp<-as.matrix(read.table("~/Dropbox/My Mac (pc-10.home)/Documents/aDOF/bioinfo_for_kids/GSE230491_AllSamples_rawCounts.txt", header=T, row.names = 1))
keep_cases<-c("case25_HOM",  "case21_HOM2",  "case24_HOM1", # "case21_HOM1",
# "case24_HOM2",
"case22_HOM",  "case23_HOM1",
# "case23_HOM2",
"case11_FCGS", "case12_FCGS", "case10_FCGS",
"case15_FCGS",  "case20_FCGS",
"case17_FCGS",
"case14_FCGS", "case18_FCGS",
"case19_FCGS",
"case5_FCGS" , "case8_FCGS",   "case32_PER",
"case30_PER",  "case29_PER" , "case31_PER" , "case28_PER" )
# change names of HOM; PER and FCGS to something more meaningfull!
# Feline chronic gingivostomatitis FCGS
# include oral pain, difficulty prehending food, ptyalism, and lack of grooming behavior
# treatment is limited: life-long medication, surgery that doesn't always work.
#
tmp<-tmp[-c(which(rowSums(tmp)==0)),keep_cases]
colnames(tmp)<-gsub("HOM1", "Sain", colnames(tmp))
colnames(tmp)<-gsub("HOM2", "Sain", colnames(tmp))
colnames(tmp)<-gsub("HOM3", "Sain", colnames(tmp))
colnames(tmp)<-gsub("HOM", "Sain", colnames(tmp))
colnames(tmp)<-gsub("case", "chat", colnames(tmp))
colnames(tmp)<-gsub("FCGS", "Chronique", colnames(tmp))
colnames(tmp)<-gsub("PER", "Legere", colnames(tmp))
cpm_counts<-edgeR::cpm(tmp, log = TRUE, prior.count = 1)
case20_FCGS <- cpm_counts[, "chat20_Chronique"]
names(case20_FCGS)<-rownames(tmp)
names(case20_FCGS)<-rownames(cpm_counts)
cpm_counts<-cpm_counts[,-c(which(colnames(cpm_counts)=="chat20_Chronique"))]
condition<-as.data.frame(cbind(sampleID=colnames(cpm_counts),
condition=sapply(strsplit(colnames(cpm_counts), "_"), '[', 2)))
sd_count<-sort(apply(cpm_counts, 1, sd), decreasing = T)
cpm_var<-cpm_counts[names(sd_count)[1:500],]
write.csv(cpm_var, "bioinfo-for-kids/docs/assets/data/genes_gingivite_chats.csv",
quote = FALSE, row.names = TRUE)
write.csv(cpm_var, "genes_gingivite_chats.csv",
quote = FALSE, row.names = TRUE)
case20_FCGS<-edgeR::cpm(case20_FCGS, log = TRUE, prior.count = 1)
cpm_counts<-edgeR::cpm(tmp, log = TRUE, prior.count = 1)
case20_FCGS <- cpm_counts[, "chat20_Chronique"]
names(case20_FCGS)<-rownames(cpm_counts)
cpm_counts<-cpm_counts[,-c(which(colnames(cpm_counts)=="chat20_Chronique"))]
condition<-as.data.frame(cbind(sampleID=colnames(cpm_counts),
condition=sapply(strsplit(colnames(cpm_counts), "_"), '[', 2)))
sd_count<-sort(apply(cpm_counts, 1, sd), decreasing = T)
cpm_var<-cpm_counts[names(sd_count)[1:500],]
write.csv(cpm_var, "genes_gingivite_chats.csv",
quote = FALSE, row.names = TRUE)
case20_FCGS <- case20_FCGS[names(sd_count)[1:500]]
identical(rownames(cpm_var), names(case20_FCGS))
write.csv(case20_FCGS, "chat20_cappuccino_genes.csv", quote = FALSE, row.names = TRUE)
pca<-prcomp(t(cpm_var), scale. = TRUE, center = TRUE)
plot(pca$x[,1], pca$x[,2])
pca_res <- as.data.frame(pca$x)
pca_res$condition<-factor(condition$condition)
ggplot(pca_res, aes(x=PC1, y=PC2, colour = condition)) +
geom_point() +
geom_text_repel(label=rownames(pca_res))
# Create a heatmap of some significant genes
## DESeq2:
dds <- DESeqDataSetFromMatrix(countData=tmp, colData=condition, design= ~condition)
# Create a heatmap of some significant genes
## DESeq2:
dds <- DESeqDataSetFromMatrix(countData=tmp[,-c(which(colnames(tmp)=="chat20_Chronique"))]
, colData=condition, design= ~condition)
dds <- DESeq(dds)
levels(as.factor(condition$condition))
# [1] "FCGS" "HOM"  "PER"
deseq2_res<-as.data.frame(results(dds,
alpha=0.05,
contrast=c("condition", "Chronique","Sain")))
rownames(tmp)
View(deseq2_res)
dim(cpm_counts)
deseq2_res<-subset(deseq2_res, rownames(deseq2_res) %in% rownames(cpm_var))
View(deseq2_res)
# up-reg, down-reg
genes<-c("ENSFCAG00000005637", "ENSFCAG00000045399", "ENSFCAG00000009165",
"ENSFCAG00000013829","ENSFCAG00000028691",
"ENSFCAG00000015193", "ENSFCAG00000036851", "ENSFCAG00000009900",
"ENSFCAG00000041420", "ENSFCAG00000041248")
diff_genes<-cpm_var[genes,]
# pour JOM:
heatmap(diff_genes, scale = "row")
?heatmap
# pour JOM:
heatmap(diff_genes, scale = "row", cexCol = 0.1)
# pour JOM:
heatmap(diff_genes, scale = "row", cexCol = 0.2)
# pour JOM:
heatmap(diff_genes, scale = "row", cexCol = 0.5)
# pour JOM:
heatmap(diff_genes, scale = "row", cexCol = 0.8, cexRow = 0.8)
# play with colors, explain rows and columns
# options:
# terrain.color(), rainbow(), heat.colors(), topo.colors() or cm.colors()
heatmap(cpm_genes, scale = "row", col=rainbow(50))
# play with colors, explain rows and columns
# options:
# terrain.color(), rainbow(), heat.colors(), topo.colors() or cm.colors()
heatmap(diff_genes, scale = "row", col=rainbow(50))
heatmap(diff_genes, scale = "row", col=heat.colors(50), cexCol=0.8, cexRow = 0.5)
cappuccino <- read.csv("chat20_cappuccino_genes.csv", row.names = 1)
View(cappuccino)
genes_avec_cappuccino<-cbind(cpm_var, cappuccino)
pca<-prcomp(t(genes_avec_cappuccino), scale. = TRUE, center = TRUE)
plot(pca$x[,1], pca$x[,2])
pca_res <- as.data.frame(pca$x)
pca_res$condition<-factor(condition_2$condition)
pca<-prcomp(t(genes_avec_cappuccino), scale. = TRUE, center = TRUE)
pca <- as.data.frame(pca)
pca<-prcomp(t(genes_avec_cappuccino), scale. = TRUE, center = TRUE)$x
pca <- as.data.frame(pca)
pca$condition<-sapply(strsplit(colnames(genes_avec_cappuccino), "_"), '[', 2)
ggplot(pca, aes(x=PC1, y=PC2, colour = condition)) +
geom_point() +
geom_text_repel(label=rownames(pca))
# Plot avec nom d'échantillon:
ggplot(pca_res, aes(x=PC1, y=PC2, colour = condition)) +
geom_point(size=4) +
geom_text_repel(label=rownames(pca_res))
ggplot(pca, aes(x=PC1, y=PC2, colour = condition)) +
geom_point() +
geom_text_repel(label=rownames(pca))
ggplot(pca, aes(x=PC1, y=PC2, colour = condition)) +
geom_point(size=4) +
geom_text_repel(label=rownames(pca))
class(case20_FCGS)
setwd("/Users/tania/Dropbox/My Mac (pc-10.home)/Documents/aDOF/bioinfo_for_kids/bioinfo-for-kids/docs/assets/data/")
tmp<-as.matrix(read.table("~/Dropbox/My Mac (pc-10.home)/Documents/aDOF/bioinfo_for_kids/GSE230491_AllSamples_rawCounts.txt", header=T, row.names = 1))
keep_cases<-c("case25_HOM",  "case21_HOM2",  "case24_HOM1", # "case21_HOM1",
# "case24_HOM2",
"case22_HOM",  "case23_HOM1",
# "case23_HOM2",
"case11_FCGS", "case12_FCGS", "case10_FCGS",
"case15_FCGS",  "case20_FCGS",
"case17_FCGS",
"case14_FCGS", "case18_FCGS",
"case19_FCGS",
"case5_FCGS" , "case8_FCGS",   "case32_PER",
"case30_PER",  "case29_PER" , "case31_PER" , "case28_PER" )
# change names of HOM; PER and FCGS to something more meaningfull!
# Feline chronic gingivostomatitis FCGS
# include oral pain, difficulty prehending food, ptyalism, and lack of grooming behavior
# treatment is limited: life-long medication, surgery that doesn't always work.
#
tmp<-tmp[-c(which(rowSums(tmp)==0)),keep_cases]
colnames(tmp)<-gsub("HOM1", "Sain", colnames(tmp))
colnames(tmp)<-gsub("HOM2", "Sain", colnames(tmp))
colnames(tmp)<-gsub("HOM3", "Sain", colnames(tmp))
colnames(tmp)<-gsub("HOM", "Sain", colnames(tmp))
colnames(tmp)<-gsub("case", "chat", colnames(tmp))
colnames(tmp)<-gsub("FCGS", "Chronique", colnames(tmp))
colnames(tmp)<-gsub("PER", "Legere", colnames(tmp))
cpm_counts<-edgeR::cpm(tmp, log = TRUE, prior.count = 1)
case20_FCGS <- cpm_counts[, "chat20_Chronique"]
names(case20_FCGS)<-rownames(cpm_counts)
cpm_counts<-cpm_counts[,-c(which(colnames(cpm_counts)=="chat20_Chronique"))]
condition<-as.data.frame(cbind(sampleID=colnames(cpm_counts),
condition=sapply(strsplit(colnames(cpm_counts), "_"), '[', 2)))
sd_count<-sort(apply(cpm_counts, 1, sd), decreasing = T)
cpm_var<-cpm_counts[names(sd_count)[1:500],]
write.csv(cpm_var, "genes_gingivite_chats.csv",
quote = FALSE, row.names = TRUE)
case20_FCGS <- case20_FCGS[names(sd_count)[1:500]]
identical(rownames(cpm_var), names(case20_FCGS))
write.csv(cbind(Cappuccino=case20_FCGS), "chat20_cappuccino_genes.csv", quote = FALSE, row.names = TRUE)
cbind(Cappuccino=case20_FCGS)
cappuccino <- read.csv("chat20_cappuccino_genes.csv", row.names = 1)
genes_avec_cappuccino<-cbind(cpm_var, cappuccino)
pca<-prcomp(t(genes_avec_cappuccino), scale. = TRUE, center = TRUE)$x
pca <- as.data.frame(pca)
pca$condition<-sapply(strsplit(colnames(genes_avec_cappuccino), "_"), '[', 2)
ggplot(pca, aes(x=PC1, y=PC2, colour = condition)) +
geom_point(size=4) +
geom_text_repel(label=rownames(pca))
genes_avec_cappuccino<-cbind(genes_chat, cappuccino)
ggplot(pca, aes(x=PC1, y=PC2, colour = condition)) +
geom_point()
ggplot(pca, aes(x=PC1, y=PC2, colour = condition)) +
geom_point()
# Ajouter les noms de chats:
ggplot(pca, aes(x=PC1, y=PC2, colour = condition)) +
geom_point() +
geom_text_repel(label=rownames(pca))
# Les chats ont la gingivite !
# Nous allons importer dans R une table qui contient l'expression des gènes.
genes_chat <- read.csv("genes_gingivite_chats.csv", row.names = 1)
# Nous allons explorer la structure de notre table: chaque ligne correspond à un
# gène, et chaque colonne correspond à un échantillon de chat.
# Les chiffres nous donnent la quantité de chaque gène dans chaque gencive.
head(genes_chat)
# La PCA: regrouper des échantillons similaires sur la base de leur expression
# des gènes.
pca <- prcomp(t(genes_chat), scale. = TRUE, center = TRUE)$x
pca <- as.data.frame(pca)
pca$condition<-sapply(strsplit(colnames(genes_chat), "_"), '[', 2)
ggplot(pca, aes(x=PC1, y=PC2, colour = condition)) +
geom_point()
# Ajouter les noms de chats:
ggplot(pca, aes(x=PC1, y=PC2, colour = condition)) +
geom_point() +
geom_text_repel(label=rownames(pca))
# Heatmap
# Des gènes qui sont hauts ou bas :
genes<-c("ENSFCAG00000005637", "ENSFCAG00000045399", "ENSFCAG00000009165",
"ENSFCAG00000013829","ENSFCAG00000028691",
"ENSFCAG00000015193", "ENSFCAG00000036851", "ENSFCAG00000009900",
"ENSFCAG00000041420", "ENSFCAG00000041248")
diff_genes<-cpm_var[genes_chat,]
diff_genes<-genes_chat[genes,]
heatmap(diff_genes, scale = "row", cexCol = 0.8, cexRow = 0.8)
diff_genes<-genes_chat[genes,]
heatmap(diff_genes, scale = "row", cexCol = 0.8, cexRow = 0.8)
View(diff_genes)
# Les chats ont la gingivite !
# Nous allons importer dans R une table qui contient l'expression des gènes.
genes_chat <- read.csv("genes_gingivite_chats.csv", row.names = 1)
class(genes_chat)
?read.csv
View(diff_genes)
View(genes_chat)
# La PCA: regrouper des échantillons similaires sur la base de leur expression
# des gènes.
pca <- prcomp(t(genes_chat), scale. = TRUE, center = TRUE)$x
pca <- as.data.frame(pca)
pca$condition<-sapply(strsplit(colnames(genes_chat), "_"), '[', 2)
ggplot(pca, aes(x=PC1, y=PC2, colour = condition)) +
geom_point()
# Ajouter les noms de chats:
ggplot(pca, aes(x=PC1, y=PC2, colour = condition)) +
geom_point() +
geom_text_repel(label=rownames(pca))
# Heatmap
# Des gènes qui sont hauts ou bas :
genes<-c("ENSFCAG00000005637", "ENSFCAG00000045399", "ENSFCAG00000009165",
"ENSFCAG00000013829","ENSFCAG00000028691",
"ENSFCAG00000015193", "ENSFCAG00000036851", "ENSFCAG00000009900",
"ENSFCAG00000041420", "ENSFCAG00000041248")
diff_genes<-genes_chat[genes,]
heatmap(diff_genes, scale = "row", cexCol = 0.8, cexRow = 0.8)
?read.csv
heatmap(matrix(diff_genes), scale = "row", cexCol = 0.8, cexRow = 0.8)
heatmap(as.matrix(diff_genes), scale = "row", cexCol = 0.8, cexRow = 0.8)
# play with colors, explain rows and columns
# options:
# terrain.color(), rainbow(), heat.colors(), topo.colors() or cm.colors()
heatmap(as.matrix(diff_genes), scale = "row", col=rainbow(50))
heatmap(as.matrix(diff_genes), scale = "row", col=heat.colors(50), cexCol=0.8, cexRow = 0.5)
heatmap(as.matrix(diff_genes), scale = "row", col=heat.colors(50))
heatmap(as.matrix(diff_genes))
heatmap(as.matrix(diff_genes), cexCol = 0.8, cexRow = 0.8)
# play with colors, explain rows and columns
# options:
# terrain.color(), rainbow(), heat.colors(), topo.colors() or cm.colors()
heatmap(as.matrix(diff_genes), col=rainbow(50))
heatmap(as.matrix(diff_genes),  col=heat.colors(50), cexCol=0.8, cexRow = 0.5)
# Heatmap
# Des gènes qui sont hauts ou bas :
genes<-c("ENSFCAG00000005637", "ENSFCAG00000045399", "ENSFCAG00000009165",
"ENSFCAG00000013829", "ENSFCAG00000013269"
"ENSFCAG00000015193", "ENSFCAG00000036851", "ENSFCAG00000009900",
# Heatmap
# Des gènes qui sont hauts ou bas :
genes<-c("ENSFCAG00000005637", "ENSFCAG00000045399", "ENSFCAG00000009165",
"ENSFCAG00000013829", "ENSFCAG00000013269" ,
"ENSFCAG00000015193", "ENSFCAG00000036851", "ENSFCAG00000009900",
"ENSFCAG00000041420", "ENSFCAG00000041248")
diff_genes<-genes_chat[genes,]
heatmap(as.matrix(diff_genes))
heatmap(as.matrix(diff_genes), cexCol = 0.8, cexRow = 0.8)
# play with colors, explain rows and columns
# options:
# terrain.color(), rainbow(), heat.colors(), topo.colors() or cm.colors()
heatmap(as.matrix(diff_genes), col=rainbow(50))
heatmap(as.matrix(diff_genes), col=heat.colors(50), cexCol=0.8, cexRow = 0.5)
heatmap(as.matrix(diff_genes))
?heatmap
heatmap(as.matrix(diff_genes), cexCol = 0.8, cexRow = 0.8)
# play with colors, explain rows and columns
# options:
# terrain.color(), rainbow(), heat.colors(), topo.colors() or cm.colors()
heatmap(as.matrix(diff_genes), col=rainbow(50))
heatmap(as.matrix(diff_genes), col=heat.colors(50), cexCol=0.8, cexRow = 0.5)
cappuccino <- read.csv("chat20_cappuccino_genes.csv", row.names = 1)
genes_avec_cappuccino<-cbind(genes_chat, cappuccino)
pca <- prcomp(t(genes_avec_cappuccino), scale. = TRUE, center = TRUE)$x
pca <- as.data.frame(pca)
pca$condition <- sapply(strsplit(colnames(genes_avec_cappuccino), "_"), '[', 2)
ggplot(pca, aes(x=PC1, y=PC2, colour = condition)) +
geom_point(size=4) +
geom_text_repel(label=rownames(pca))
heatmap(as.matrix(diff_genes))
heatmap(as.matrix(diff_genes), cexCol = 0.8, cexRow = 0.8)
heatmap(as.matrix(diff_genes), cexCol = 0.8, cexRow = 0.6)
heatmap(as.matrix(diff_genes), cexCol = 0.6, cexRow = 0.8)
```r
heatmap(as.matrix(diff_genes), col=rainbow(50), cexCol=0.8, cexRow = 0.5)
heatmap(as.matrix(diff_genes), col=rainbow(50), cexCol=0.6, cexRow = 0.8)
heatmap(as.matrix(diff_genes), col=cm.colors(50), cexCol=0.6, cexRow = 0.8)
heatmap(as.matrix(diff_genes), col=topo.colors(50), cexCol=0.6, cexRow = 0.8)
heatmap(as.matrix(diff_genes), col=terrain.color(50), cexCol=0.6, cexRow = 0.8)
heatmap(as.matrix(diff_genes), col=terrain.color(50), cexCol=0.6, cexRow = 0.8)
?terrain.colors
heatmap(as.matrix(diff_genes), col=terrain.colors(50), cexCol=0.6, cexRow = 0.8)
pca<-prcomp(t(genes_avec_cappuccino), scale. = TRUE, center = TRUE)$x
pca <- as.data.frame(pca)
pca$condition<-sapply(strsplit(colnames(genes_avec_cappuccino), "_"), '[', 2)
ggplot(pca, aes(x=PC1, y=PC2, colour = condition)) +
geom_point(size=4) +
geom_text_repel(label=rownames(pca))
ggplot(pca, aes(x=PC1, y=PC2, colour = condition)) +
geom_point(size=2) +
geom_text_repel(label=rownames(pca))
View(genes_chat)
pca <- prcomp(t(genes_chat), scale. = TRUE, center = TRUE)$x
pca <- as.data.frame(pca)
pca$condition<-sapply(strsplit(colnames(genes_chat), "_"), '[', 2)
ggplot(pca, aes(x=PC1, y=PC2, colour = condition)) +
geom_point()
